name: Deploy to ACI

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP: github-action-1
  ACI_NAME: acrassignment1
  ACR_NAME: acrassignment1
  IMAGE_NAME: acrassignment1.azurecr.io/mydotnetapp:latest
  DNS_LABEL: mydotnetapp

jobs:
  deploy-to-aci:
    name: Deploy App to ACI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Update ACI to use the new Docker image
      - name: Update ACI with new image
        run: |
          az container update \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --image ${{ env.IMAGE_NAME }}

      # Step 4: Show ACI details (to confirm deployment and get public IP)
      - name: Get ACI Details
        run: |
          az container show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --query "{State:provisioningState, IPAddress:ipAddress.ip}" \
            -o table

      # Step 5: Output Public IP for browsing
      - name: Output Public URL
        run: |
          ACI_IP=$(az container show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --query "ipAddress.ip" -o tsv)
          echo "Your application is running at http://$ACI_IP:5000"
