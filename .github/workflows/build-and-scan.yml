name: Deploy to ACI

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP: github-action-1
  ACI_NAME: acrassignment1
  ACR_NAME: acrassignment1
  IMAGE_NAME: acrassignment1.azurecr.io/mydotnetapp:latest
  DNS_LABEL: mydotnetapp

jobs:
  deploy-to-aci:
    name: Deploy App to ACI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Delete existing ACI instance
      - name: Delete Existing ACI
        run: |
          az container delete \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --yes || echo "No existing container to delete."

      # Step 4: Create ACI instance with updated image
      - name: Create ACI with updated image
        run: |
          az container create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --image ${{ env.IMAGE_NAME }} \
            --dns-name-label ${{ env.DNS_LABEL }} \
            --ports 5000 \
            --cpu 1 \
            --memory 1 \
            --environment-variables ASPNETCORE_ENVIRONMENT=Development

      # Step 5: Output Public URL
      - name: Output Public URL
        run: |
          ACI_IP=$(az container show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --query "ipAddress.ip" -o tsv)
          echo "Your application is running at http://$ACI_IP:5000"
